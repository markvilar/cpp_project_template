name: build-linux

on: 
  push:
  pull_request:
    branches: [main]

defaults:
  run:
    shell: bash

env:
  source_dir: "${{github.workspace}}"
  build_dir: "${{github.workspace}}/build"

jobs:
  build:
    name: "build-${{matrix.os}}-${{matrix.build_type}}-${{matrix.compiler.c}}"
    runs-on: "${{matrix.os}}"
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-20.04
            compiler: { c: gcc, cpp: g++ }
            generator: Ninja
            build_type: Release
            platform: x64
            profile: linux_ninja_gcc
          
          - os: ubuntu-20.04
            compiler: { c: clang, cpp: clang++ }
            generator: Ninja
            build_type: Release
            platform: x64
            profile: linux_ninja_clang
          
          - os: ubuntu-20.04
            compiler: { c: gcc, cpp: g++ }
            generator: Ninja
            build_type: Release
            platform: x64
            profile: linux_makefiles_gcc
          
          - os: ubuntu-20.04
            compiler: { c: clang, cpp: clang++ }
            generator: Unix Makefiles
            build_type: Release
            platform: x64
            profile: linux_makefiles_clang

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Environment setup
      uses: ./.github/actions/setup-linux

    - name: Conan default and client profile
      run: conan profile detect
    
    - name: Conan install
      run: conan install . --profile ${{source_dir}}/${{matrix.profile}}

    - name: Conan build
      run: conan build . --profile ${{source_dir}}/${{matrix.profile}} --build missing

    - name: Conan create
      run: conan create . --profile ${{source_dir}}/${{matrix.profile}}
